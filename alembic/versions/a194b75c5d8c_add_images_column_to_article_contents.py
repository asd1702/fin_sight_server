"""Add images column to article_contents

Revision ID: a194b75c5d8c
Revises: be06d2857cf1
Create Date: 2025-09-10 01:32:46.654381

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = 'a194b75c5d8c'
down_revision: Union[str, None] = 'be06d2857cf1'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # 기존 테이블들을 다시 생성하지 않고, images 컬럼만 추가
    
    # PostgreSQL connection을 통해 컬럼 존재 여부 확인
    conn = op.get_bind()
    
    # images 컬럼 존재 여부 확인
    result = conn.execute(sa.text("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_schema = 'articles' 
        AND table_name = 'article_contents' 
        AND column_name = 'images'
    """))
    
    if not result.fetchone():
        op.add_column('article_contents', sa.Column('images', postgresql.JSONB(astext_type=sa.Text()), nullable=True), schema='articles')


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_column('article_contents', 'images', schema='articles')
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('title', sa.Text(), nullable=False),
    sa.Column('url', sa.String(length=1024), nullable=False),
    sa.Column('description', sa.Text(), nullable=True),
    sa.Column('published_at', sa.DateTime(timezone=True), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=True),
    sa.Column('status', sa.Enum('PENDING', 'PROCESSING', 'PROCESSED', 'FAILED', name='articlestatus'), nullable=False),
    sa.Column('created_at', sa.DateTime(timezone=True), server_default=sa.text('now()'), nullable=True),
    sa.Column('updated_at', sa.DateTime(timezone=True), nullable=True),
    sa.PrimaryKeyConstraint('id'),
    schema=('articles')
    op.create_index(op.f('ix_articles_articles_category'), 'articles', ['category'], unique=False, schema='articles')
    op.create_index(op.f('ix_articles_articles_url'), 'articles', ['url'], unique=True, schema='articles')
    op.create_table('indicators',
    sa.Column('indicator_id', sa.String(length=50), nullable=False),
    sa.Column('name', sa.Text(), nullable=False),
    sa.Column('frequency', sa.String(length=10), nullable=True),
    sa.Column('unit', sa.String(length=50), nullable=True),
    sa.Column('source', sa.String(length=50), nullable=True),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('stat_code', sa.String(length=20), nullable=True),
    sa.Column('item_code1', sa.String(length=20), nullable=True),
    sa.Column('item_code2', sa.String(length=20), nullable=True),
    sa.Column('item_code3', sa.String(length=20), nullable=True),
    sa.Column('item_code4', sa.String(length=20), nullable=True),
    sa.PrimaryKeyConstraint('indicator_id'),
    schema='statistics'
    )
    op.create_table('article_contents',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('content', sa.Text(), nullable=False),
    sa.Column('images', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.articles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article_id'),
    schema='articles'
    )
    op.create_table('enriched_articles',
    sa.Column('id', sa.BigInteger(), nullable=False),
    sa.Column('article_id', sa.BigInteger(), nullable=False),
    sa.Column('background', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('keywords', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('category', sa.String(length=50), nullable=False),
    sa.Column('related_statistics', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.Column('statistics_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True),
    sa.ForeignKeyConstraint(['article_id'], ['articles.articles.id'], ),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('article_id'),
    schema='articles'
    )
    op.create_table('observations',
    sa.Column('indicator_id', sa.String(length=50), nullable=False),
    sa.Column('date', sa.Date(), nullable=False),
    sa.Column('value', sa.Float(), nullable=False),
    sa.ForeignKeyConstraint(['indicator_id'], ['statistics.indicators.indicator_id'], ),
    sa.PrimaryKeyConstraint('indicator_id', 'date'),
    schema='statistics'
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('observations', schema='statistics')
    op.drop_table('enriched_articles', schema='articles')
    op.drop_table('article_contents', schema='articles')
    op.drop_table('indicators', schema='statistics')
    op.drop_index(op.f('ix_articles_articles_url'), table_name='articles', schema='articles')
    op.drop_index(op.f('ix_articles_articles_category'), table_name='articles', schema='articles')
    op.drop_table('articles', schema='articles')
    # ### end Alembic commands ###
