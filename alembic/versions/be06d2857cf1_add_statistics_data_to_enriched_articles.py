"""Add statistics_data to enriched_articles

Revision ID: be06d2857cf1
Revises: ab666d65e925
Create Date: 2025-09-09 23:03:00.000000

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
# --- ▼ 추가된 부분 ▼ ---
# JSONB 타입을 사용하기 위해 postgresql dialect를 임포트합니다.
from sqlalchemy.dialects import postgresql
# --- ▲ 추가된 부분 ▲ ---


# revision identifiers, used by Alembic.
revision: str = 'be06d2857cf1'
down_revision: Union[str, None] = 'ab666d65e925'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # --- ▼ 수정된 부분 ▼ ---
    # related_statistics 컬럼이 이미 존재하므로 statistics_data 컬럼만 추가
    # 컬럼이 이미 존재하는지 확인하고 없을 때만 추가
    
    # PostgreSQL connection을 통해 컬럼 존재 여부 확인
    conn = op.get_bind()
    
    # related_statistics 컬럼 존재 여부 확인
    result = conn.execute(sa.text("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_schema = 'articles' 
        AND table_name = 'enriched_articles' 
        AND column_name = 'related_statistics'
    """))
    
    if not result.fetchone():
        op.add_column('enriched_articles', sa.Column('related_statistics', postgresql.JSONB(astext_type=sa.Text()), nullable=True), schema='articles')
    
    # statistics_data 컬럼 존재 여부 확인
    result = conn.execute(sa.text("""
        SELECT column_name 
        FROM information_schema.columns 
        WHERE table_schema = 'articles' 
        AND table_name = 'enriched_articles' 
        AND column_name = 'statistics_data'
    """))
    
    if not result.fetchone():
        op.add_column('enriched_articles', sa.Column('statistics_data', postgresql.JSONB(astext_type=sa.Text()), nullable=True), schema='articles')
    # --- ▲ 수정된 부분 ▲ ---
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    # --- ▼ 수정된 부분 ▼ ---
    # upgrade에서 추가한 두 개의 컬럼을 삭제하는 역순 작업을 정의합니다.
    op.drop_column('enriched_articles', 'statistics_data', schema='articles')
    op.drop_column('enriched_articles', 'related_statistics', schema='articles')
    # --- ▲ 수정된 부분 ▲ ---
    # ### end Alembic commands ###

